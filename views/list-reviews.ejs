<%- include("partials/header.ejs") %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

  <link rel="stylesheet" href="../style/style.css" />
  <link rel="stylesheet" href="../style/bookreview-style.css">

  <body>
    <%- include("partials/fixed-menu.ejs") %>
      <div class="container">
        <div class="item center-text hamburguer-icon">
          <h1> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-stars"
              viewBox="0 0 16 16">
              <path
                d="M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828l.645-1.937zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.734 1.734 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.734 1.734 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.734 1.734 0 0 0 3.407 2.31l.387-1.162zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L10.863.1z" />
            </svg> List of Books Reviews</h1>
            <%- include("partials/hidden-menu.ejs") %>
        </div>
        <hr />
        <div class="item">

          <input type="text" id="search-input" class="magnifying-glass"
            placeholder="Search reviews by book title, author, reviewer, number of stars" />

        </div>
        <div class="item btn-flex">
          <form action="/" method="POST">
            <!-- action and method will be made by button's properties: formaction and value-->
            <input type="hidden" id="filterTypeA_z" value="a-z" name="filter">
            <button type="submit" class="btn-filter" formaction="/reviews/list" value="POST">
              <img src="../images/funnel.svg" alt="filter">
              a - z
            </button>
          </form>
          <form action="/" method="POST">
            <!-- action and method will be made by button's properties: formaction and value-->
            <input type="hidden" id="filterTypeZ_a" value="z-a" name="filter">
            <button type="submit" class="btn-filter" formaction="/reviews/list" value="POST">
              <img src="../images/funnel.svg" alt="filter">
              z - a
            </button>
          </form>
          <form action="/" method="POST">
            <input type="hidden" id="filterTypeRating" value="rating" name="filter">
            <button type="submit" formaction="/reviews/list" value="POST" class="btn-filter">
              <img src="../images/funnel.svg" alt="filter">
              Rating
            </button>
          </form>
          <form action="/" method="POST">
            <input type="hidden" id="filterTypeOldest" value="oldest" name="filter">
            <button type="submit" formaction="/reviews/list" value="POST" class="btn-filter">
              <img src="../images/funnel.svg" alt="filter">
              Oldest
            </button>
          </form>
          <form action="/" method="POST">
            <input type="hidden" id="filterTypeNewest" value="newest" name="filter">
            <button type="submit" formaction="/reviews/list" value="POST" class="btn-filter">
              <img src="../images/funnel.svg" alt="filter">Newest
            </button>
          </form>
        </div>
        <!-- Show reviews -->
        <% if (locals.reviews && reviews.length> 0) { %>
          <% for (let review of reviews) { %>
            <div class="item">
              <div class="card">
                <div class="card-title">
                  <p id="reviewTitleP<%=review.id%>">
                    <%= review.title %>
                  </p>
                  <!-- field available only for editing-->
                  <!-- <input type="hidden" value="<%= review.title %>"> -->
                  <input id="reviewIdInput<%=review.id%>" type="hidden" value="<%=review.id%>">
                  <select id="bookTitleSelect<%=review.id%>" name="book_title" id="book_title_id" hidden>
                    <option value="<%= review.book_id %>" selected>
                      <%= review.title %>
                    </option>
                    <% if (locals.books) { %>

                      <% books.forEach(book=> { %>
                        <option value="<%=book.id%>">
                          <%=book.title%>
                        </option>
                        <% }) %>

                          <% } %>
                  </select>
                  <hr />
                </div>
                <div class="card-person-name"><small>By <span id="bookAuthorSpan<%=review.id%>">
                      <%= review.book_author %>
                    </span>
                    <!-- field available only for editing-->
                    <select id="bookAuthorSelect<%=review.id%>" name="book_author" hidden>
                      <option value="<%=review.author_id%>" selected>
                        <%=review.book_author %>
                      </option>
                      <% if ( locals.authors ) { %>
                        <% authors.forEach( author=> { %>
                          <option value="<%=author.id%>">
                            <%=author.full_name%>
                          </option>
                          <% }) %>
                            <% } %>
                    </select>
                  </small></div>
                <div class="card-date-and-ratings">
                  <small>Review Date:<span id="reviewDateSpan<%=review.id%>">
                      <%= review.review_date.toISOString().split('T')[0] %>
                    </span>
                    <!-- field available only for editing-->
                    <input id="reviewDateInput<%=review.id%>" name="review_date" type="hidden"
                      value="<%= review.review_date.toISOString().split('T')[0] %>">
                  </small>
                  <small><img src="../images/person-circle.svg" alt="Comment owner review"> By <span
                      id="reviewOwnerSpan<%=review.id%>">
                      <%= review.review_owner %>
                    </span>
                    <!-- field available only for editing-->
                    <input id="reviewOwnerInput<%=review.id%>" type="hidden" name="owner_review"
                      value="<%= review.review_owner%>">
                  </small>
                  <small>Ratings:
                    <input type="hidden" id="ratingInput<%=review.id%>" value="<%=review.rating%>">
                    <% let halfStarAdded=false; for(let count=1; count <=5; count++) { %>
                      <% if ( count <=review.rating ) { %>
                        <svg id="star<%= count %>" xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                          fill="#ffd814" viewBox="0 0 16 16">
                          <path
                            d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                        </svg>
                        <% } else if ( (""+review.rating).split(".").length> 1 && !halfStarAdded) { %>
                          <!-- check if rating has a decimal part -->
                          <svg id="star<%= count %>" xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                            fill="#ffd814" viewBox="0 0 16 16">
                            <path
                              d="M5.354 5.119 7.538.792A.516.516 0 0 1 8 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.537.537 0 0 1 16 6.32a.548.548 0 0 1-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.52.52 0 0 1-.146.05c-.342.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 0 1-.172-.403.58.58 0 0 1 .085-.302.513.513 0 0 1 .37-.245l4.898-.696zM8 12.027a.5.5 0 0 1 .232.056l3.686 1.894-.694-3.957a.565.565 0 0 1 .162-.505l2.907-2.77-4.052-.576a.525.525 0 0 1-.393-.288L8.001 2.223 8 2.226v9.8z" />
                          </svg>
                          <% halfStarAdded=true; %>
                            <% } else { %>
                              <svg id="star<%= count %>" xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                fill="#ffd814" viewBox="0 0 16 16">
                                <path
                                  d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
                              </svg>
                              <% } %>
                                <% } %>
                  </small>
                </div>
                <div class="card-content">
                  <img src="<%=review.book_cover_url%>" alt="review-conver" width="100" class="wrap-text" />
                  <p class="card-text">
                    <span id="reviewCommentsSpan<%=review.id%>">
                      <%= review.review_comments %>
                    </span>
                    <!-- field available only for editing-->
                    <textarea id="reviewCommentsTextArea<%=review.id%>" name="reviews_commments" cols="0" rows="10"
                      hidden>
                      <%= review.review_comments %>
                    </textarea>
                  </p>

                </div>
                <div class="social-and-actions">

                  <div>
                    <button id="dislike-btn-<%=review.id%>" onclick="countClick('dislike-btn-<%=review.id%>')"
                      onmouseleave="registerClick('<%=review.id%>')">
                      <img src="../images/hand-thumbs-down.svg" alt="hand-thumbs-down" />
                      <small><span>
                          <%=review.dislikecount%>
                        </span>
                      </small>
                    </button>
                    <button id="like-btn-<%=review.id%>" onclick="countClick('like-btn-<%=review.id%>')"
                      onmouseleave="registerClick('<%=review.id%>')">
                      <img src="../images/hand-thumbs-up.svg" alt="hand-thumbs-up" />
                      <small><span>
                          <%=review.likecount%>
                        </span>
                      </small>
                    </button>
                    <button>
                      <img src="../images/chat.svg" alt="chat" /><small>
                        1M comments</small>
                    </button>
                  </div>
                  <form action="/reviews/likes" method="POST">
                    <input type="hidden" id="review_code" value="<%=review.id%>" name="reviewId">
                    <input type="hidden" id="like_id<%=review.id%>" value="<%=review.likecount%>" name="like">
                    <input type="hidden" id="dislike_id<%=review.id%>" value="<%=review.dislikecount%>" name="dislike">
                    <input type="submit" id="likes-dislikes-btn<%=review.id%>" hidden>
                  </form>
                  <div>
                    <button id="edit-btn<%=review.id%>" onclick="edit('<%=review.id%>')">
                      <img src="../images/pencil-square.svg" alt="Image Edit" /> Edit
                    </button>
                    <form id="form-update-id" action="/reviews/update" method="POST" hidden>
                      <input type="hidden" id="title_id" name="book_title" value="">
                      <input type="hidden" id="author_id" name="author" value="">
                      <input type="hidden" id="review_date_id" name="reviewDate" value="">
                      <input type="hidden" id="review_owner_id" name="review_owner" value="">
                      <!-- <input type="hidden" id="review_update_id" name="review_update" value=""> -->
                      <input type="hidden" id="review_id" name="reviewId" value="">
                      <textarea name="reviewComments" id="reviewComments" cols="30" rows="10"></textarea>
                      <input type="submit" id="btn-update" value="">
                    </form>
                    <button onclick="deleteMessage('<%=review.id%>','<%=review.title%>')"><img src="../images/trash.svg"
                        alt="" /> Delete</button>
                    <form action="/reviews/delete" method="POST">
                      <input type="hidden" name="idToDelete" id="flagDeleted_id" value="0">
                    </form>
                    <form action="/reviews/list" method="GET" hidden>
                      <input type="hidden" id="cancel">
                    </form>
                  </div>
                </div>
              </div>
            </div>
            <% } %>
              <% } else { %>
                <p>
                  <%=error%>
                </p>
                <% } %>
      </div>
      <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
      <!-- alert type: sweetalert2 https://sweetalert2.github.io/#examples -->
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.5/dist/sweetalert2.all.min.js"></script>

      <script>

        /* @variables declaration*/
        let deleted = "<%=locals.flagDeleted%>";
        let updated = "<%=locals.flagUpdated%>";
        let errorMessge = "<%=locals.error%>";
        let btnLikeCliked = false;
        let btnDisLikeCliked = false;

        /* delete a review */
        function deleteMessage(id, name) {
          Swal.fire({
            title: "Confirm your actions",
            text: `Do you really want to delete book with title ${name} ?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
          }).then((result) => {
            if (result.isConfirmed) {
              $('#flagDeleted_id').attr('value', id);
              $('#flagDeleted_id').parents("form").submit();
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              Swal.fire("Changes won't be applied", "", "info");
            }
          });
        }

        /* event triggered when the page is loaded */
        $(window).on("load", function () {
          if (deleted === "true") {
            Swal.fire({
              title: "Deleted!",
              text: "Review was sucessfully deleted.",
              icon: "success"
            });
          } else if (updated === "true") {
            Swal.fire({
              title: "Success!",
              text: "Review was sucessfully updated.",
              icon: "success"
            });
          } else if (errorMessge.length > 0) {
            Swal.fire({
              title: errorMessge.toLowerCase().includes("implemented") ? "warning" : "error",
              text: errorMessge,
              icon: errorMessge.toLowerCase().includes("implemented") ? "warning" : "error"
            });
          }
        });

        /* Edit review action: will hide and show elements as need */
        function edit(id) {
          if ($('#edit-btn' + id).text().trim().indexOf('Edit') > -1) {
            $('#edit-btn' + id).html('<img src="../images/pencil-square.svg" alt="" /> Update');
            /* The elements bellow could be obtained using IDs to inside the HTML elements*/
            /* title */
            $('#reviewTitleP' + id).fadeOut();
            $('#bookTitleSelect' + id).addClass("input-width");
            $('#bookTitleSelect' + id).removeAttr("hidden");
            /* review date */
            $('#reviewDateSpan' + id).attr("hidden", "hidden");
            $('#reviewDateInput' + id).attr("type", "date");
            /* review owner */
            $('#reviewOwnerSpan' + id).attr("hidden", "hidden");
            $('#reviewOwnerInput' + id).attr("type", "text");
            /* review comment */
            $('#reviewCommentsSpan' + id).attr("hidden", "hidden");
            $('#reviewCommentsTextArea' + id).addClass("text-area-size");
            $('#reviewCommentsTextArea' + id).removeAttr("hidden");
          } else if ($('#edit-btn' + id).text().trim().indexOf('Update') > -1) {
            $('#edit-btn' + id).html('<img src="../images/pencil-square.svg" alt="" /> Edit');
            /* title */
            $('#bookTitleSelect' + id).attr("hidden", "hidden");
            $('#bookTitleSelect' + id).removeClass("input-width");
            $('#reviewTitleP' + id).fadeIn();
            /* review date */
            $('#reviewDateSpan' + id).removeAttr("hidden");
            $('#reviewDateInput' + id).attr("type", "hidden");
            /* review owner */
            $('#reviewOwnerSpan' + id).removeAttr("hidden");
            $('#reviewOwnerInput' + id).attr("type", "hidden");
            /* review comment */
            $('#reviewCommentsSpan' + id).removeAttr("hidden");
            $('#reviewCommentsTextArea' + id).removeClass("text-area-size");
            $('#reviewCommentsTextArea' + id).attr("hidden", "hidden");
            /* Grab the values */
            let reviewValue = $('#reviewIdInput' + id).val();
            let reviewField = $('#review_id').attr("value", reviewValue);
            let titleField = $('#title_id');
            let titleValue = $('#bookTitleSelect' + id).val();
            let authorField = $('#author_id');
            let authorValue = $('#bookAuthorSelect' + id).val();
            let reviewDateField = $('#review_date_id');
            let reviewDateValue = $('#reviewDateInput' + id).val();
            let reviewCommentField = $('#reviewComments');
            let reviewCommentValue = $('#reviewCommentsTextArea' + id).val();
            let reviewOwnerField = $('#review_owner_id');
            let reviewOwnerValue = $('#reviewOwnerInput' + id).val();

            titleField.attr("value", titleValue);
            authorField.attr("value", authorValue);
            reviewDateField.attr("value", reviewDateValue);
            reviewCommentField.text(reviewCommentValue);
            reviewOwnerField.attr("value", reviewOwnerValue);

            // confirm here if will update or not
            Swal.fire({
              title: "Confirm your actions",
              text: `Do you really want to update this review ?`,
              icon: "warning",
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Yes, update it!"
            }).then((result) => { // confirmed
              if (result.isConfirmed) {
                $('#btn-update').parents("form").submit();
              } else if (result.dismiss === Swal.DismissReason.cancel) { // cancelled
                Swal.fire("Changes won't be applied", "", "info");
                $('#cancel').parents("form").submit(); // call cancellation route
              }
            });
          }
        }
        /*count likes or dislikes  */
        function countClick(id) {
          if (id.indexOf('dislike-btn') > -1) {
            let valueDislike = $('#' + id + ' small span').text();
            valueDislike = parseInt(valueDislike) + 1
            $('#' + id + ' small span').text(valueDislike);
            $('#dislike_id' + id.slice(12)).attr("value", valueDislike);
            btnDisLikeCliked = true;
          } else if (id.indexOf('like-btn') > -1) {
            let valueLike = $('#' + id + ' small span').text();
            valueLike = parseInt(valueLike) + 1
            $('#' + id + ' small span').text(valueLike);
            $('#like_id' + id.slice(9)).attr("value", valueLike);
            btnLikeCliked = true;
          }
        }

        /* send automacally clicks to database
        *  clicks will sent when onmouseleave event happens
        *  but if user doesn't click it won't happen
        */
        function registerClick(id) {
          if (btnDisLikeCliked || btnLikeCliked) {
            btnLikeCliked = false;
            btnDisLikeCliked = false;
            $('#likes-dislikes-btn' + id).parents("form").submit();
          }
        }

        /* edit action for input element: will filter items inside html page */
        $('#search-input').on("input", () => {
          let typing = $('#search-input').val();
          let cardsItems = $('.item > .card');
          let grandSons = [];
          let find = false;
          for (let i = 0; i < cardsItems.length; i++) {
            let father = cardsItems[i];
            for (let j = 0; j < father.childElementCount; j++) {
              let sons = father.children;
              for (let k = 0; k < sons.length; k++) {
                grandSons = sons[k].children;
                if (sons[k].classList.contains("card-title")) {
                  for (let l = 0; l < grandSons.length; l++) {
                    if (!grandSons[l].hidden && grandSons[l].innerHTML.toLowerCase().indexOf(typing.toLowerCase()) > -1) {
                      find = true;
                    }
                  }
                } else if (sons[k].classList.contains("card-person-name")) {
                  // card-person-name just has on child, then we'll all his children to avoid many loops
                  for (let l1 = 0; l1 < grandSons[0].children.length; l1++) { // card-person-name just have on child 
                    if (grandSons[0].children[l1].id.includes("bookAuthorSpan")) {
                      if (grandSons[0].children[l1].outerText.toLowerCase().includes(typing.toLowerCase())) {
                        find = true;
                      }
                    }
                  }

                }
                else if (sons[k].classList.contains("card-date-and-ratings")) {
                  for (let m = 0; m < grandSons.length; m++) {
                    let greatGrandSons = grandSons[m].children;
                    for (let n = 0; n < greatGrandSons.length; n++) {
                      if (!greatGrandSons[n].hidden && greatGrandSons[n].id.indexOf("reviewOwnerSpan") > -1 ) {
                        if (greatGrandSons[n].outerText.toLowerCase().indexOf(typing.toLowerCase()) > -1) {
                          find = true;
                        }
                      } else if ( greatGrandSons[n].id.indexOf("ratingInput") > -1 ){
                        console.log("I am in", greatGrandSons[n].value);
                        try {
                          let rate = parseFloat(greatGrandSons[n].value);
                          let inputrate = parseFloat(typing);
                          if ( rate === inputrate )
                            find = true;
                        } catch (error) {
                          console.log("error while trying to convert rating stars")
                        }
                      }
                    }
                  }
                }
                father.hidden = find ? false : true;
              }
            }//       
            find = false;
          }
        });
      </script>
      <script src="../js/hidden-menu.js"></script>
       <%- include("partials/footer.ejs")%>
  </body>

  </html>